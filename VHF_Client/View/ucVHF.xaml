<UserControl x:Class="VHF_Client.View.ucVHF"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:VHF_Client.View"
             xmlns:localSubMenu="clr-namespace:VHF_Client.View.SubMenu"
             mc:Ignorable="d" 
             d:DesignHeight="420" d:DesignWidth="450">
    <!--d:DesignHeight="420" d:DesignWidth="1030">-->
    <UserControl.Resources>
        <!-- Button Style -->
        <Style TargetType="Button">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border" Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="1"
                                CornerRadius="5">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"
                                              Content="{TemplateBinding Content}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="gray"/>
                                <Setter Property="Foreground" Value="Black"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="border" Property="Background" Value="black"/>
                                <Setter Property="Foreground" Value="White"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Background" Value="LightGray"/>
            <Setter Property="BorderBrush" Value="Gray"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="Padding" Value="10,5"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontWeight" Value="Bold"/>
        </Style>

        <Style TargetType="TextBlock">
            <Setter Property="FontWeight" Value="Bold"/>
        </Style>        

        <!-- Define the animation to blink between Red and White -->
        <!--자연스러운 smooth animation 적용시-->
        <Storyboard x:Key="BlinkingAnimation" RepeatBehavior="Forever">
            <!--AutoReverse="True"-->
            <ColorAnimation 
                Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" 
                From="Red" 
                To="White" 
                Duration="0:0:1" />
            <!--<ColorAnimation 
                Storyboard.TargetName="blinkingCircle" 
                Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" 
                From="Red" 
                To="White" 
                Duration="0:0:1" />-->
        </Storyboard>

        <Storyboard x:Key="BlinkingNormalAnimation" RepeatBehavior="Forever">
            <!--AutoReverse="True"-->
            <ColorAnimation 
                Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" 
                From="Green" 
                To="White" 
                Duration="0:0:1" />
            <!--<ColorAnimation 
                Storyboard.TargetName="blinkingNoramlCircle" 
                Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" 
                From="Green" 
                To="White" 
                Duration="0:0:1" />-->
        </Storyboard>

        <!-- Define the animation to instantly switch between Red and White -->
        <!--
        <Storyboard x:Key="BlinkingAnimation" RepeatBehavior="Forever">
            <ColorAnimationUsingKeyFrames Storyboard.TargetName="blinkingCircle"
                                          Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)">
                -->
        <!-- Instant change to Red -->
        <!--
                <DiscreteColorKeyFrame KeyTime="0:0:1" Value="Red"/>
                -->
        <!-- Instant change to White -->
        <!--
                <DiscreteColorKeyFrame KeyTime="0:0:2" Value="White"/>
            </ColorAnimationUsingKeyFrames>
        </Storyboard>-->
    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="35"/>
            <RowDefinition/>
        </Grid.RowDefinitions>

        <Grid Background="Black">
            <Image HorizontalAlignment="Left" Source="../Resource/LogoSTR.png"/>
        </Grid>

        <Grid Grid.Row="1" Background="Black" Margin="0,-10,0,0">
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition Height="90"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="100"/>
                <!--<ColumnDefinition/>-->
            </Grid.ColumnDefinitions>

            <Border Grid.Column="0" BorderThickness="1" BorderBrush="Black" Margin="10" Background="White">
                <Grid  Background="White">
                    <Grid x:Name="gridMainScreen">
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <TextBlock Grid.Row="0" Text="{Binding ChannelName}" Margin="2" FontSize="16"/>
                        <TextBlock Grid.Row="1" Text="{Binding WatchTypeValue}" Margin="2" FontSize="16"/>
                        <TextBlock Grid.Row="1" Text="{Binding ChannelMode}" Margin="2" FontSize="16" HorizontalAlignment="Right"/>
                        <TextBlock Grid.Row="2" Text="{Binding TransmitPower}" Margin="2" FontSize="16" HorizontalAlignment="Left"/>
                        <TextBlock x:Name="txtVHFChannel"  Grid.Row="2" Grid.RowSpan="3" Text="{Binding VHFChannel}" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="100" Visibility="{Binding IsChVhfVisible}"/>
                        <!--Margin="0,40,0,30"-->

                        <TextBlock x:Name="txtCh16"  Grid.Row="2" Grid.RowSpan="3" Text="16" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="100" Visibility="{Binding IsCh16Visible}"/>
                        <TextBlock x:Name="txtCh09"  Grid.Row="2" Grid.RowSpan="3" Text="9" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="100" Visibility="{Binding IsCh09Visible}"/>


                        <TextBlock x:Name="txtDataFlowStatus" Grid.Row="5" Text="{Binding DataFlowStatus}" FontSize="16" HorizontalAlignment="Right" Margin="5" />

                        <TextBlock Grid.Row="5" Text="{Binding Latitude}" FontSize="16" HorizontalAlignment="Left" Margin="2"/>
                        <TextBlock Grid.Row="6" Text="{Binding Longitude}" FontSize="16" HorizontalAlignment="Left" Margin="2"/>
                        <TextBlock Grid.Row="7" Text="{Binding Localtime}" FontSize="16" HorizontalAlignment="Left" Margin="2"/>
                    </Grid>
                </Grid>
            </Border>

            <Grid x:Name="gridDSCMessage" Grid.Row="0" Grid.RowSpan="1" Grid.Column="0" Visibility="{Binding IsDSCMsgVisible}">
                <Border BorderThickness="1" BorderBrush="Black" Margin="10" Background="White">
                    <Grid>
                        <TextBlock x:Name="txtDSC" Text="{Binding DSCMessage}" FontWeight="Bold" Margin="12,2,2,2"/>
                    </Grid>
                </Border>
            </Grid>

            <Grid x:Name="gridDSCMenu" Grid.Row="0" Grid.RowSpan="1" Grid.Column="0" Visibility="{Binding IsDSCMenuVisible}">
                <local:DSCMenuView/>
            </Grid>

            <Grid x:Name="gridMenu" Grid.Row="0" Grid.RowSpan="1" Grid.Column="0" Visibility="{Binding IsMenuVisible}">
                <local:MenuView/>
            </Grid>

            <!--<Grid x:Name="gridDistressCall" Grid.Row="0" Grid.RowSpan="1" Grid.Column="0" Visibility="{Binding IsDistressCallVisible}">
        <localSubMenu:DistressCallView/>
    </Grid>-->

            <Grid Grid.Row="1" Margin="0,-2,0,0" Background="Black">
                <Grid>
                    <Button x:Name="btnCh16orCurrent" Width="60" Height="30" Content="16 / 9" Margin="-140,-20,0,0" Command="{Binding Channel16orCurrentCommand}" />
                    <Button x:Name="btnCh70" Width="60" Height="30" Content="CH70" Margin="120,-20,0,0" Command="{Binding Channel70Command}"/>

                    <TextBlock x:Name="txtUsingVoiceChannel" Text="{Binding UsingVoiceChannel}" VerticalAlignment="Center" Margin="2" Foreground="LightYellow"/>
                    <TextBlock Name="txtServerStatus" Text="{Binding ServerStatus}" Margin="10,2,2,2" Foreground="IndianRed" HorizontalAlignment="Left" VerticalAlignment="Bottom"/>
                </Grid>
            </Grid>

            <Grid Grid.Row="0" Grid.Column="1" Grid.RowSpan="2" Background="#232325" Margin="0,-30,0,0">

                <Grid.RowDefinitions>
                    <RowDefinition Height="30"/>
                    <RowDefinition/>
                </Grid.RowDefinitions>

                <Grid Grid.Row="1">
                    <!--Background="#232325"-->
                    <Grid.RowDefinitions>
                        <RowDefinition Height="80"/>
                        <RowDefinition Height="30"/>
                        <RowDefinition Height="30"/>
                        <RowDefinition/>
                        <RowDefinition Height="40"/>
                        <RowDefinition Height="50"/>
                    </Grid.RowDefinitions>
                    <Button x:Name="btnDistress" Content="DISTRESS" Command="{Binding DistressCommand}" Background="Red" Foreground="White" Width="80" Height="60"/>

                    <Ellipse Grid.Row="1" Name="blinkingCircle" Margin="-60,0,0,0" Width="15" Height="15" HorizontalAlignment="Center" VerticalAlignment="Center">
                        <!--<Ellipse.Fill>
                <SolidColorBrush Color="{Binding DistAlarmCircleColor}"/>
                -->
                        <!--<SolidColorBrush Color="White"/>-->
                        <!--
            </Ellipse.Fill>-->
                        <Ellipse.Style>
                            <Style TargetType="Ellipse">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsDistressAlarmBlinking}" Value="True">
                                        <Setter Property="Fill" Value="Red"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsDistressAlarmBlinking}" Value="False">
                                        <Setter Property="Fill" Value="White"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Ellipse.Style>
                    </Ellipse>
                    <!--<Ellipse Grid.Row="1" x:Name="blinkingCircle" Margin="-60,0,0,0" Width="15" Height="15" HorizontalAlignment="Center" VerticalAlignment="Center">
            <Ellipse.Fill>
                <SolidColorBrush Color="White"/>
            </Ellipse.Fill>
            <Ellipse.Style>
                <Style TargetType="Ellipse">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsBlinking}" Value="True">
                            <DataTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource BlinkingAnimation}" />
                            </DataTrigger.EnterActions>
                            <DataTrigger.ExitActions>
                                <StopStoryboard BeginStoryboardName="BlinkingAnimation" />
                            </DataTrigger.ExitActions>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Ellipse.Style>
        </Ellipse>-->

                    <TextBlock Grid.Row="1" Text="DIST" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="White"/>
                    <!--<Ellipse Grid.Row="2" Name="blinkingNoramlCircle" Margin="-60,0,0,0" Width="15" Height="15" HorizontalAlignment="Center" VerticalAlignment="Center">
            <Ellipse.Fill>
                <SolidColorBrush Color="White"/>
            </Ellipse.Fill>
        </Ellipse>-->
                    <Ellipse Grid.Row="2" Name="blinkingNoramlCircle" Margin="-60,0,0,0" Width="15" Height="15" HorizontalAlignment="Center" VerticalAlignment="Center">
                        <Ellipse.Style>
                            <Style TargetType="Ellipse">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsOtherAlarmBlinking}" Value="True">
                                        <Setter Property="Fill" Value="Green"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsOtherAlarmBlinking}" Value="False">
                                        <Setter Property="Fill" Value="White"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Ellipse.Style>
                    </Ellipse>

                    <!--<Ellipse Grid.Row="2" x:Name="blinkingNoramlCircle" Margin="-60,0,0,0" Width="15" Height="15" HorizontalAlignment="Center" VerticalAlignment="Center">
            <Ellipse.Fill>
                <SolidColorBrush Color="White"/>
            </Ellipse.Fill>
            <Ellipse.Style>
                <Style TargetType="Ellipse">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsBlinkingNormal}" Value="True">
                            <DataTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource BlinkingNormalAnimation}" />
                            </DataTrigger.EnterActions>
                            <DataTrigger.ExitActions>
                                <StopStoryboard BeginStoryboardName="BlinkingNormalAnimation" />
                            </DataTrigger.ExitActions>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Ellipse.Style>
        </Ellipse>-->

                    <TextBlock Grid.Row="2" Text="OTHER" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="White" Margin="10,0,0,0"/>

                    <Button Grid.Row="4" Content="DSC MENU" Command="{Binding DcsMenuCommand}" Width="85" Height="30" />
                    <Button Grid.Row="5" Content="MENU" Command="{Binding MenuCommand}" Width="85" Height="30" />
                </Grid>
            </Grid>
        </Grid>
    </Grid>
</UserControl>
